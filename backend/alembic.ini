# alembic.ini - Alembic database migration configuration file
# This file configures the database migration tool used to manage 
# schema changes in the application database.

# A generic, single database configuration.
[alembic]
# path to migration scripts - where migration files are stored
script_location = alembic

# template used to generate migration files
# Uncomment to use custom templates for migration files
# file_template = %%(rev)s_%%(slug)s

# timezone to use when rendering the date
# within the migration file as well as the filename.
# string value is passed to dateutil.tz.gettz()
# leave blank for localtime
# timezone =

# max length of characters to apply to the
# "slug" field in migration filenames
# truncate_slug_length = 40

# set to 'true' to run the environment during
# the 'revision' command, regardless of autogenerate
# Enables access to models during migration generation
# revision_environment = false

# set to 'true' to allow .pyc and .pyo files without
# a source .py file to be detected as revisions in the
# versions/ directory
# sourceless = false

# version location specification; this defaults
# to alembic/versions. When using multiple version
# directories, initial revisions must be specified with --version-path
# version_locations = %(here)s/bar %(here)s/bat alembic/versions

# the output encoding used when revision files
# are written from script.py.mako
# output_encoding = utf-8

# Logging configuration
# Controls how Alembic logs information during migrations
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

# Root logger configuration (catches all non-specific logs)
[logger_root]
level = WARN  # Only log warnings and above
handlers = console
qualname =

# SQLAlchemy engine logger configuration (for SQL queries)
[logger_sqlalchemy]
level = WARN  # Only log warnings and above from SQLAlchemy
handlers =
qualname = sqlalchemy.engine

# Alembic-specific logger configuration
[logger_alembic]
level = INFO  # Log all information messages and above from Alembic
handlers =
qualname = alembic

# Console output handler configuration
[handler_console]
class = StreamHandler  # Handler that writes to stderr
args = (sys.stderr,)
level = NOTSET  # Capture all log levels
formatter = generic

# Log message format configuration
[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s  # Format: LEVEL [logger_name] message
datefmt = %H:%M:%S  # Time format for log entries